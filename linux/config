-- ibus-sogoupycc 配置文件
-- 注：
-- 此文件亦为 lua 脚本，以双减号开头的行以及被 --[[ 和 --]] 括起来的区域为注释，注释没有实际作用
-- 此文件在一个窗口切换到本输入法时被执行一次，若执行中发生错误，输入法将报错并拒绝运行

-- 若用户配置文件（~/.ibus/sgpycc/config）存在，则只加载用户配置文件
if not useUserConfig then local userConfig = os.getenv('HOME')..'/.ibus/sgpycc/config' local file = io.open(userConfig, 'r') if file then file:close() useUserConfig = true dofile(userConfig) return end end

----------------------------------------------------
-- 全局设置                                       --
-- 此类设置对所有客户端（窗口）生效，只需运行一次 --
----------------------------------------------------

if pycc.firstRun then
-- 双拼布局，在声母部分使用 "-" 表示禁用，零声母使用""
-- 默认：没有布局（无法使用双拼功能！），所以若要使用双拼功能，必须像下方一样指定一个布局
-- 注：双拼布局对所有客户端程序生效，只需要初始化一次
-- 目前仅支持26个英文字母组成的布局，不支持含有 ';' 的布局

-- 自然码布局（和微软拼音双拼布局不同之处很小：ing 由 y 键完成）
pycc.setDoublePinyinScheme{
	q = {"q", {"iu"}}, w = {"w", {"ia", "ua"}}, e = {"-", {"e"}}, r = {"r", {"uan", "er"}}, t = {"t", {"ve", "ue"}}, y = {"y", {"uai", "ing"}}, u = {"sh", {"u"}}, i = {"ch", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"un"}},
	a = {"-", {"a"}}, s = {"s", {"ong", "iong"}}, d = {"d", {"uang", "iang"}}, f = {"f", {"en"}}, g = {"g", {"eng"}}, h = {"h", {"ang"}}, j = {"j", {"an"}}, k = {"k", {"ao"}}, l = {"l", {"ai"}},
	z = {"z", {"ei"}}, x = {"x", {"ie"}}, c = {"c", {"iao"}}, v = {"zh", {"ui", "v"}}, b = {"b", {"ou"}}, n = {"n", {"in"}}, m = {"m", {"ian"}},
}
--[[
--]]

-- 显示调试信息级别（0 - 6）
-- 默认：0，不显示任何调试信息
-- pycc.setDebugLevel(2)
end


----------------------------------------------------
-- 非全局设置                                     --
-- 此类设置在不同的客户端内可以不同，每次都要运行 --
-- 譬如，若将颜色部分设为随机，则在不同客户端程序 --
-- （不同窗口）中将有不同的颜色                   --
----------------------------------------------------

-- 初始时是否处于中文输入模式
-- 默认：false，处于中文模式
-- pycc.engMode = false

-- 切换中英文模式按键
-- 默认：左 Shift
-- pycc.engModeToggleKey = key.Shift_L

-- 进入纠正模式按键
-- 默认：Tab
-- pycc.correctionKey = key.Tab

-- 是否使用双拼
-- 默认：true，使用双拼（使用双拼必须使用pyy.setDoublePinyinScheme定义一个双拼布局）
-- pycc.useDoublePinyin = true

-- 纠正模式中选词可以用的选择按键（不能超过16个字符）
-- 默认："jkl;uiopasdf"
-- pycc.labelKeys = "jkl;uiopasdf"

-- 纠正模式中向下，向上翻页按键
-- 默认：("h"), ("g")
-- pycc.pageDownKey, pycc.pageUpKey = ('h'):byte(), ("g"):byte()

-- 英文-中文标点映射表
-- 默认：如下
-- 注：中文模式下依照下表使用中文标点，英文模式下使用英文标点。目前没有设置全半角以及中/英文标点切换热键
-- pycc.puncMap = {
--	['.'] = '。', [','] = '，', ['^'] = '……', ['@'] = '＠', ['!'] = '！', ['~'] = '～',
--	['?'] = '？', ['#'] = '＃', ['$'] = '￥', ['&'] = '＆', ['('] = '（', [')'] = '）',
--	['{'] = '｛', ['}'] = '｝', ['['] = '［', [']'] = '］', [';'] = '；', [':'] = '：',
--	['<'] = '《', ['>'] = '》',
--	["'"] = { 2, '‘', '’'}, ['"'] = { 2, '“', '”'}
-- }

-- 向云服务器请求的缓存，可以通过这里实现自定义词组
-- 默认：nil，完全禁用缓存
-- 注：缓存不被保存，程序结束后缓存失效，各客户端程序使用各自独立的缓存
requestCache = {
	['t'] = '它', ['w'] = '我',
}

-- 是否将请求结果写入缓存
-- 默认：true，写入缓存
-- 注：开启后在同一客户端内的请求结果会被写入缓存
-- pycc.writeRequestCache = true

-- 颜色设定
-- 默认：如下
-- pycc.preeditForeColor, pycc.preeditBackColor = 0x0050FF, pycc.COLOR_NOCHANGE
-- pycc.requestingForeColor, pycc.requestingBackColor = pycc.COLOR_NOCHANGE, 0xB8CFE5
-- pycc.requestedForeColor, pycc.requestedBackColor = 0x00C97F, pycc.COLOR_NOCHANGE

-- 请求脚本
-- 默认：pycc.PKGDATADIR .. "/fetcher"
-- 注：该脚本从命令行接受一个参数，将请求结果写到标准输出第一行中，
-- 该脚本需处理超时情况，若出现错误，该脚本可以将接受的参数原封不动
-- 输出，或者输出一空行
-- pycc.fetcher = pycc.PKGDATADIR .. "/fetcher"

-- 请求脚本返回文字的最大大小（字节，包括末尾\0）
-- 默认：1024
-- pycc.fetcherBufferSize = 1024

-- 尚有一些进阶设置未于此注出，geekers 请参考 http://code.google.com/p/ibus-sogoupycc/
