--------------------------------------------------------------------------------
-- ibus-sogoupycc 配置文件                                                    --
--------------------------------------------------------------------------------
-- 也是 lua 脚本，本文件在一个窗口开始使用输入法时被执行一次，若执行中出错，  --
-- 输入法将报错并终止运行，同时可能造成前台程序没有响应，此时请重启 ibus      --
-- 双减号开头的行和被 --[[ , --]] 括起来的区域为注释，注释无实际作用          --
-- “默认”是指配置文件中不显式写明相应项时程序使用的默认值                     --
--------------------------------------------------------------------------------


-- 若用户配置文件 (~/.ibus/sgpycc/config)存在，则只加载用户配置文件
if not useUserConfig then local userConfig = os.getenv('HOME')..'/.ibus/sgpycc/config' local file = io.open(userConfig, 'r') if file then file:close() useUserConfig = true dofile(userConfig) return end end



--[[----------------------------------------------------------------------------
全局设置
此类设置对所有客户端 (窗口)生效，只需运行一次
--]]----------------------------------------------------------------------------

if pycc.firstRun then

-- 双拼方案，在声母部分使用 "-" 表示禁用，零声母使用 ""
-- 返回值：歧义 (按两个键，可能有多种全拼解释为歧义) 数，正确的双拼布局应返回 0
-- 默认：没有方案 (无法使用双拼功能！)，所以若要使用双拼功能，必须指定一个方案
assert(pycc.setDoublePinyinScheme{
-- 自然码方案 (其他双拼方案于本文件末尾列出，需要使用可以将其覆盖于此)
	q = {"q", {"iu"}}, w = {"w", {"ia", "ua"}}, e = {"-", {"e"}}, r = {"r", {"uan", "er"}}, t = {"t", {"ve", "ue"}}, y = {"y", {"uai", "ing"}}, u = {"sh", {"u"}}, i = {"ch", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"un"}},
	a = {"-", {"a"}}, s = {"s", {"ong", "iong"}}, d = {"d", {"uang", "iang"}}, f = {"f", {"en"}}, g = {"g", {"eng"}}, h = {"h", {"ang"}}, j = {"j", {"an"}}, k = {"k", {"ao"}}, l = {"l", {"ai"}},
	z = {"z", {"ei"}}, x = {"x", {"ie"}}, c = {"c", {"iao"}}, v = {"zh", {"ui", "v"}}, b = {"b", {"ou"}}, n = {"n", {"in"}}, m = {"m", {"ian"}},
} == 0)

-- 加载 ibus-pinyin 1.2.99 兼容的只读外部字词库
-- 参数：路径，权重系数
-- 默认：不加载任何外部字词库
-- 注：可以多次加载外部字词库，加载同一位置的字词库只有第一次生效
-- 返回值：第一次成功打开词库返回 1，否则 0
-- 下面的代码将加载 pycc.PKGDATADIR .. '/db' 下所有 .db 文件
local dbs, db = io.popen('ls ' .. pycc.PKGDATADIR .. '/db/*.db')
repeat db = dbs:read('*line') if (db) then pycc.loadDatabase(db, 1) end until not db
dbs:close()

-- 显示调试信息级别 (0 - 6)
-- 默认：0，不显示任何调试信息
-- pycc.setDebugLevel(2)
end



--[[----------------------------------------------------------------------------
非全局设置
此类设置在不同的客户端内可以不同，每次都要运行
譬如，若将颜色部分设为随机，则在不同客户端程序 (不同窗口) 中将有不同的颜色
--]]----------------------------------------------------------------------------

-- 模式 ------------------------------------------------------------------------

-- 初始时是否处于中文输入模式
-- 默认：false，处于中文模式
-- pycc.engMode = false

-- 是否使用双拼
-- 默认：true，使用双拼
-- 注：使用双拼则须用 pyy.setDoublePinyinScheme 定义一个双拼方案
-- pycc.useDoublePinyin = false


-- 字词库 ----------------------------------------------------------------------

-- 纠正模式下数据库使用顺序
-- 默认：如果已经加载了至少一个外部字词库，为 'd' ，否则为 '2'
-- 注："2" 为内部 gb2312 单字库（简体，将音调列出）
-- "d" 为外部字词库 (ibus-pinyin 1.2.99 兼容)
-- '2d' 即为，先列出内部 gb2312 单字库，紧跟着列出外部字词库 (如果有的话)
-- 内部字库和外部字词库若有重复，不会被去除
-- pycc.dbOrder = '2d'

-- 外部字词库结果限制，0 为无限制
-- 默认：64，每个字词库每个长度的结果最多 64 个
-- pycc.dbLimit = 0

-- 外部字词库长词组位置调整，0 为没有调整，负数向后调整，正数向前调整
-- 默认：1.0，将长词组位置稍微提前
-- pycc.dbPhraseAdjust = 2.0


-- 按键 ------------------------------------------------------------------------

-- 切换中英文模式按键
-- 默认：左 Shift
-- pycc.engModeToggleKey = key.Shift_L

-- 进入纠正模式按键
-- 默认：Tab
-- pycc.correctionKey = key.Tab

-- 纠正模式中向下，向上翻页按键
-- 默认：('h'):byte(), ('g'):byte()
-- pycc.pageDownKey, pycc.pageUpKey = ('h'):byte(), ('g'):byte()

-- 纠正模式中选词可以用的选择按键 (不能超过16个字符)
-- 默认："jkl;uiopasdf"
-- pycc.labelKeys = "jkl;uiopasdf"


-- 标点 ------------------------------------------------------------------------

-- 英文-中文标点映射表
-- 默认：如下
-- 注：中文模式下依照下表使用中文标点，英文模式下使用英文标点
-- 倘若双拼方案指定了 ';' 键，则 ';' 被优先考虑用在组成拼音
-- 倘若使用全拼，则 "'" 键被优先考虑为输入隔音符（屏幕显示为单个空格）
-- 目前没有设置全半角以及中 / 英文标点切换热键
--[[ pycc.puncMap = {
	['.'] = '。', [','] = '，', ['^'] = '……', ['@'] = '·', ['!'] = '！', ['~'] = '～',
	['?'] = '？', ['#'] = '＃', ['$'] = '￥', ['&'] = '＆', ['('] = ' (', [')'] = ')',
	['{'] = '｛', ['}'] = '｝', ['['] = '［', [']'] = '］', [';'] = '；', [':'] = '：',
	['<'] = '《', ['>'] = '》', ['\\'] = '、',
	["'"] = { 2, '‘', '’'}, ['"'] = { 2, '“', '”'} }
--]]


-- 云 --------------------------------------------------------------------------

-- 向云服务器请求的缓存，可以通过这里实现自定义词组
-- 默认：nil，完全禁用缓存
-- 注：缓存不被保存，程序结束后缓存失效，各客户端程序使用各自独立的缓存
requestCache = {
	['t'] = '它', ['w'] = '我',
}

-- 是否将请求结果写入缓存
-- 默认：true，写入缓存
-- 注：开启后在同一客户端内的请求结果会被写入缓存
-- pycc.writeRequestCache = true

-- 请求脚本位置
-- 默认：pycc.PKGDATADIR .. "/fetcher"
-- 注：该脚本接受一个可能用空格做分割的拼音字符串为参数，将请求结果写到
-- 标准输出第一行中，该脚本需处理超时情况，若出现错误，该脚本可以将接受
-- 的参数原封不动输出，或者输出一空行
-- pycc.fetcher = pycc.PKGDATADIR .. "/fetcher"

-- 请求脚本返回文字的最大大小 (字节，包括末尾 '\0' )
-- 默认：1024
-- pycc.fetcherBufferSize = 1024


-- 颜色 ------------------------------------------------------------------------

-- 颜色设定
-- preedit 用于未提交拼音提示部分
-- requesting 为正在请求部分，也用于纠正模式中
-- requested 为已获得结果但由于前面还有正在请求内容而暂不能上屏的部分
-- 默认：如下
-- pycc.preeditForeColor, pycc.preeditBackColor = 0x0050FF, pycc.COLOR_NOCHANGE
-- pycc.requestingForeColor, pycc.requestingBackColor = pycc.COLOR_NOCHANGE, 0xB8CFE5
-- pycc.requestedForeColor, pycc.requestedBackColor = 0x00C97F, pycc.COLOR_NOCHANGE

-- 纠正模式 --------------------------------------------------------------------

-- 超时，当选择一段新的文字之后，如果超过这个时间，则再按纠正热键也不会起作用
-- 默认： 5.0， 5 秒钟后超时
-- pycc.selectionTimeout = 5.0

-- Note ------------------------------------------------------------------------

-- 尚有一些实验性以及调试用途的设置以及方法未于此注出
-- geekers 请参考 http://code.google.com/p/ibus-sogoupycc/


-- 双拼方案 --------------------------------------------------------------------
--[[
-- 如有问题或者遗漏，欢迎在 http://code.google.com/p/ibus-sogoupycc/issues 指出
-- 微软拼音方案
	q = {"q", {"iu"}}, w = {"w", {"ia", "ua"}}, e = {"-", {"e"}}, r = {"r", {"uan", "er"}}, t = {"t", {"ue"}}, y = {"y", {"uai", "v"}}, u = {"sh", {"u"}}, i = {"ch", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"un"}},
	a = {"-", {"a"}}, s = {"s", {"ong", "iong"}}, d = {"d", {"uang", "iang"}}, f = {"f", {"en"}}, g = {"g", {"eng"}}, h = {"h", {"ang"}}, j = {"j", {"an"}}, k = {"k", {"ao"}}, l = {"l", {"ai"}}, [';'] = {"-", {"ing"}},
	z = {"z", {"ei"}}, x = {"x", {"ie"}}, c = {"c", {"iao"}}, v = {"zh", {"ui", "ve"}}, b = {"b", {"ou"}}, n = {"n", {"in"}}, m = {"m", {"ian"}},
-- 搜狗拼音方案 (类似微软拼音方案，不同在于 've' 的位置，微软拼音方案在 V 键，搜狗拼音方案在 T 键。目前没有将 've' 列入合法拼音，全部使用 'ue' ，所以两方案实际相同)
	q = {"q", {"iu"}}, w = {"w", {"ia", "ua"}}, e = {"-", {"e"}}, r = {"r", {"uan", "er"}}, t = {"t", {"ue", "ve"}}, y = {"y", {"uai", "v"}}, u = {"sh", {"u"}}, i = {"ch", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"un"}},
	a = {"-", {"a"}}, s = {"s", {"ong", "iong"}}, d = {"d", {"uang", "iang"}}, f = {"f", {"en"}}, g = {"g", {"eng"}}, h = {"h", {"ang"}}, j = {"j", {"an"}}, k = {"k", {"ao"}}, l = {"l", {"ai"}}, [';'] = {"-", {"ing"}},
	z = {"z", {"ei"}}, x = {"x", {"ie"}}, c = {"c", {"iao"}}, v = {"zh", {"ui"}}, b = {"b", {"ou"}}, n = {"n", {"in"}}, m = {"m", {"ian"}},
-- 自然码方案 (类似搜狗拼音和微软拼音方案，自然码方案中 'ing' 由 ; 移动到了 Y 键， 'v' 由 Y 移到了 V 键)
	q = {"q", {"iu"}}, w = {"w", {"ia", "ua"}}, e = {"-", {"e"}}, r = {"r", {"uan", "er"}}, t = {"t", {"ve", "ue"}}, y = {"y", {"uai", "ing"}}, u = {"sh", {"u"}}, i = {"ch", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"un"}},
	a = {"-", {"a"}}, s = {"s", {"ong", "iong"}}, d = {"d", {"uang", "iang"}}, f = {"f", {"en"}}, g = {"g", {"eng"}}, h = {"h", {"ang"}}, j = {"j", {"an"}}, k = {"k", {"ao"}}, l = {"l", {"ai"}},
	z = {"z", {"ei"}}, x = {"x", {"ie"}}, c = {"c", {"iao"}}, v = {"zh", {"ui", "v"}}, b = {"b", {"ou"}}, n = {"n", {"in"}}, m = {"m", {"ian"}},
-- 拼音加加方案
	q = {"q", {"er", "ing"}}, w = {"w", {"ei"}}, e = {"-", {"e"}}, r = {"r", {"en"}}, t = {"t", {"eng"}}, y = {"y", {"iong", "ong"}}, u = {"ch", {"u"}}, i = {"sh", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"ou"}},
	a = {"-", {"a"}}, s = {"s", {"ai"}}, d = {"d", {"ao"}}, f = {"f", {"an"}}, g = {"g", {"ang"}}, h = {"h", {"iang", "uang"}}, j = {"j", {"ian"}}, k = {"k", {"iao"}}, l = {"l", {"in"}},
	z = {"z", {"un"}}, x = {"x", {"uai", "ue", "ve"}}, c = {"c", {"uan"}}, v = {"zh", {"ui", "v"}}, b = {"b", {"ia", "ua"}}, n = {"n", {"iu"}}, m = {"m", {"ie"}},
-- 智能 ABC 方案
	q = {"q", {"ei"}}, w = {"w", {"ian"}}, e = {"-", {"e"}}, r = {"r", {"iu", "er"}}, t = {"t", {"iang", "uang"}}, y = {"y", {"ing"}}, u = {"-", {"u"}}, i = {"-", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"uan"}},
	a = {"zh", {"a"}}, s = {"s", {"ong", "iong"}}, d = {"d", {"ia", "ua"}}, f = {"f", {"en"}}, g = {"g", {"eng"}}, h = {"h", {"ang"}}, j = {"j", {"an"}}, k = {"k", {"ao"}}, l = {"l", {"ai"}},
	z = {"z", {"iao"}}, x = {"x", {"ie"}}, c = {"c", {"in", "uai"}}, v = {"sh", {"ve", "v"}}, b = {"b", {"ou"}}, n = {"n", {"un"}}, m = {"m", {"ue", "ve", "ui"}},
-- 紫光拼音方案
	q = {"q", {"ao"}}, w = {"w", {"en"}}, e = {"-", {"e"}}, r = {"r", {"an"}}, t = {"t", {"eng"}}, y = {"y", {"in", "uai"}}, u = {"zh", {"u"}}, i = {"sh", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"ai"}},
	a = {"-", {"a"}}, s = {"s", {"ang"}}, d = {"d", {"ie"}}, f = {"f", {"ian"}}, g = {"g", {"iang", "uang"}}, h = {"h", {"iong", "ong"}}, j = {"j", {"er", "iu"}}, k = {"k", {"ei"}}, l = {"l", {"uan"}}, [';'] = {"-", {"ing"}},
	z = {"z", {"ou"}}, x = {"x", {"ia", "ua"}}, c = {"c", {}}, v = {"-", {"ui", "v"}}, b = {"b", {"iao"}}, n = {"n", {"ue", "ve", "ui"}}, m = {"m", {"un"}},
-- 紫光拼音方案改 ('ing' 由 ; 移动到 C 键)
	q = {"q", {"ao"}}, w = {"w", {"en"}}, e = {"-", {"e"}}, r = {"r", {"an"}}, t = {"t", {"eng"}}, y = {"y", {"in", "uai"}}, u = {"zh", {"u"}}, i = {"sh", {"i"}}, o = {"", {"o", "uo"}}, p = {"p", {"ai"}},
	a = {"-", {"a"}}, s = {"s", {"ang"}}, d = {"d", {"ie"}}, f = {"f", {"ian"}}, g = {"g", {"iang", "uang"}}, h = {"h", {"iong", "ong"}}, j = {"j", {"er", "iu"}}, k = {"k", {"ei"}}, l = {"l", {"uan"}},
	z = {"z", {"ou"}}, x = {"x", {"ia", "ua"}}, c = {"c", {"ing"}}, v = {"-", {"ui", "v"}}, b = {"b", {"iao"}}, n = {"n", {"ue", "ve", "ui"}}, m = {"m", {"un"}},
--]]
